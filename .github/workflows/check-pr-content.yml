name: Check Pull Request Content

on:
  pull_request:
    types: [opened, edited, synchronize, ready_for_review, labeled, unlabeled]

jobs:
  check-pr-content:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for Smartling label
        id: check-labels
        env:
          PR_LABELS: ${{ toJSON(github.event.pull_request.labels) }}
        run: |
          echo "Debug: PR Labels: $PR_LABELS"
          
          LABEL_FOUND=$(echo "$PR_LABELS" | grep -o '"name": *"smartling"' | awk -F': ' '{print $2}' | sed 's/"//g')
          echo "Debug: LABEL_FOUND: $LABEL_FOUND"
          
          if [ "$LABEL_FOUND" == "smartling" ]; then
            echo "status=success" >> $GITHUB_ENV
            echo "message=Skipped image or video check due to 'smartling' label." >> $GITHUB_ENV
            exit 0
          fi
          echo "status=continue" >> $GITHUB_ENV

      - name: Normalize PR Body
        id: normalize-pr-body
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "Debug: PR Body Original: '$PR_BODY'"
          
          PR_BODY_NORMALIZED=$(echo "$PR_BODY" | tr -d '\r\n' | sed 's/[[:space:]]\+/ /g')
          echo "Debug: PR Body Normalized: '$PR_BODY_NORMALIZED'"
          
          echo "PR_BODY_NORMALIZED=$PR_BODY_NORMALIZED" >> $GITHUB_ENV

      - name: Check PR for image, video, YES or NO
        id: check-content
        if: env.status == 'continue'
        env:
          PR_BODY_NORMALIZED: ${{ env.PR_BODY_NORMALIZED }}
        run: |
          imageRegex="!\\[.*\\]\\(.*\\)|<img .*src=.*>"
          videoRegex="(https?://.*\.(mp4|mov|avi|wmv|flv|mkv|webm|ogg)|https?://github\.com/[^/\s]+/[^/\s]+/assets/[^/\s]+/\w+|<video .*src=.*)"

          body=$(echo "${{ github.event.pull_request.body }}" | tr -d '\r')
          echo "Debug: PR Body: '$body'"
          
          if [[ -z "${PR_BODY_NORMALIZED// }" ]]; then
            echo "status=failure" >> $GITHUB_ENV
            echo "message=PR body is empty. Please include a screenshot or video in the PR description." >> $GITHUB_ENV
          elif ! echo "$PR_BODY_NORMALIZED" | grep -qE "$imageRegex" && ! echo "$PR_BODY_NORMALIZED" | grep -qE "$videoRegex"; then
            echo "status=failure" >> $GITHUB_ENV
            echo "message=Please include a screenshot or video in the PR description." >> $GITHUB_ENV
          elif ! echo "$body" | grep -iq '\[\s*[xX]\s*\]\s*YES\s*$' && ! echo "$body" | grep -iq '\[\s*[xX]\s*\]\s*NO\s*$'; then
            echo "status=failure" >> $GITHUB_ENV
            echo "message=Please check either 'YES' or 'NO' checkbox in the PR description." >> $GITHUB_ENV
          else
            echo "status=success" >> $GITHUB_ENV
            echo "message=PR includes a screenshot or video and either 'YES' or 'NO' checkbox in the description." >> $GITHUB_ENV
          fi

      - name: Echo status
        if: always()
        run: |
          echo "Status: ${{ env.status }}"
          echo "Message: ${{ env.message }}"
          if [[ "${{ env.status }}" == "success" ]]; then
            exit 0
          else
            exit 1
          fi
